@import url('https://fonts.googleapis.com/css2?family=Castoro:ital@0;1&family=Cormorant+Garamond:ital,wght@0,300;0,400;0,500;1,300;1,400;1,500&family=Cormorant:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&family=Kanit:wght@100;200;300;400;500;600;700;800;900&family=Quicksand:wght@300&display=swap');

.edit-wrap {
    position: relative;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    margin: 0 auto;
    align-self: center;
    justify-content: center;
    font-family: 'kanit', sans-serif;
    z-index: 5;
}
  
.parallax-bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    z-index: -1;
    background-image: url('../../page-assets/templeOfSaturn.jpg');
    background-size: cover;
    background-position: center;
    transform: translateZ(0);
}

.image-row {
    display: flex;
    flex-wrap: nowrap; 
    overflow-x: auto;  
}

.image-preview {
    margin-right: 10px; /* Adjust the margin between images */
}
.edit-item {
  width: 50%;
  margin: 100px auto;
  padding: 20px;
  font-size: 16px;
  background-color: rgba(255, 255, 255, 0.95);
  border: 2px solid #D71313;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.edit-item input,
.edit-item button {
  display: flex;
  width: 100%;
  padding: 8px;
  box-sizing: border-box;
}

.edit-item input,
.edit-item textarea {
  height: 9vh;
}

.edit-item textarea{
    height: 20vh;
}

.edit-item button {
  background-color: #D71313; /* Green */
  color: white;
  padding: 10px 15px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.edit-item button:hover {
  background-color: #cb0a0a
}

.edit-item h3 {
  margin-top: 20px;
}

.edit-item label {
  display: block;
  margin-bottom: 5px;
}

.edit-item .checkbox-wrap {
  margin-top: 10px;
}

.edit-item .border-4 {
  border-style: dashed;
}

.edit-item .dnd-context {
  margin-top: 20px;
}

.edit-item .dragged {
  opacity: 0.5;
}

.edit-item .bg-red-500 {
  background-color: #f44336;
  color: white;
  padding: 8px;
  margin-bottom: 10px;
}

.edit-item .bg-blue-300 {
  background-color: #2196F3;
  color: white;
  padding: 10px 15px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.edit-item .bg-blue-300:hover {
  background-color: #0b7dda;
}

@media(max-width: 1280px) {
    .edit-item {
        width: 70%;
    }
}

@media(max-width: 900px) {
    .edit-item {
        width: 90%;
    }
}

@media(max-width: 700px) {
    .edit-item {
        width: 98%;
    }
}
/*
    TEXTBOX
*/
/*
=====
HELPERS
=====
*/

.ha-screen-reader{
    width: var(--ha-screen-reader-width, 1px);
    height: var(--ha-screen-reader-height, 1px);
    padding: var(--ha-screen-reader-padding, 0);
    border: var(--ha-screen-reader-border, none);
  
    position: var(--ha-screen-reader-position, absolute);
    clip: var(--ha-screen-reader-clip, rect(1px, 1px, 1px, 1px));
    overflow: var(--ha-screen-reader-overflow, hidden);
  }
  
  /*
  =====
  RESET STYLES
  =====
  */
  
  .field__input{ 
    --uiFieldPlaceholderColor: var(--fieldPlaceholderColor, #767676);
    
    background-color: transparent;
    border-radius: 0;
    border: none;
  
    -webkit-appearance: none;
    -moz-appearance: none;
  
    font-family: inherit;
    font-size: inherit;
  }
  
  .field__input:focus::-webkit-input-placeholder{
    color: var(--uiFieldPlaceholderColor);
  }
  
  .field__input:focus::-moz-placeholder{
    color: var(--uiFieldPlaceholderColor);
  }
  
  /*
  =====
  CORE STYLES
  =====
  */
  
  .field{
    --uiFieldBorderWidth: var(--fieldBorderWidth, 2px);
    --uiFieldPaddingRight: var(--fieldPaddingRight, 1rem);
    --uiFieldPaddingLeft: var(--fieldPaddingLeft, 1rem);   
    --uiFieldBorderColorActive: var(--fieldBorderColorActive, rgba(22, 22, 22, 1));
  
    display: var(--fieldDisplay, inline-flex);
    position: relative;
    font-size: var(--fieldFontSize, 1rem);
  }
  
  .field__input{
    box-sizing: border-box;
    width: var(--fieldWidth, 100%);
    height: var(--fieldHeight, 3rem);
    padding: var(--fieldPaddingTop, 1.25rem) var(--uiFieldPaddingRight) var(--fieldPaddingBottom, .5rem) var(--uiFieldPaddingLeft);
    border-bottom: var(--uiFieldBorderWidth) solid var(--fieldBorderColor, rgba(0, 0, 0, .25));  
  }
  
  .field__input:focus{
    outline: none;
  }
  
  .field__input::-webkit-input-placeholder{
    opacity: 0;
    transition: opacity .2s ease-out;
  }
  
  .field__input::-moz-placeholder{
    opacity: 0;
    transition: opacity .2s ease-out;
  }
  
  .field__input:focus::-webkit-input-placeholder{
    opacity: 1;
    transition-delay: .2s;
  }
  
  .field__input:focus::-moz-placeholder{
    opacity: 1;
    transition-delay: .2s;
  }
  
  .field__label-wrap{
    box-sizing: border-box;
    pointer-events: none;
    cursor: text;
  
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
  
  .field__label-wrap::after{
    content: "";
    box-sizing: border-box;
    width: 100%;
    height: 0;
    opacity: 0;
  
    position: absolute;
    bottom: 0;
    left: 0;
  }
  
  .field__input:focus ~ .field__label-wrap::after{
    opacity: 1;
  }
  
  .field__label{
    position: absolute;
    left: var(--uiFieldPaddingLeft);
    top: calc(50% - .5em);
  
    line-height: 1;
    font-size: var(--fieldHintFontSize, inherit);
  
    transition: top .2s cubic-bezier(0.9, -0.15, 0.1, 1.15), opacity .2s ease-out, font-size .2s ease-out;
  }
  
  .field__input:focus ~ .field__label-wrap .field__label,
  .field__input:not(:placeholder-shown) ~ .field__label-wrap .field__label{
    --fieldHintFontSize: var(--fieldHintFontSizeFocused, .75rem);
  
    top: var(--fieldHintTopHover, .25rem);
  }
  
  /*
  effect 3
  */
  
  .field_v3 .field__label-wrap::after{
    border: var(--uiFieldBorderWidth) solid var(--uiFieldBorderColorActive);
    transition: height .2s ease-out, opacity .2s ease-out;
  }
  
  .field_v3 .field__input:focus ~ .field__label-wrap::after{
    height: 100%;
  }
  
  /*
  =====
  LEVEL 4. SETTINGS
  =====
  */
  
  .field{
    --fieldBorderColor: #D1C4E9;
    --fieldBorderColorActive: #673AB7;
    margin: 10px 0;
  }









/*
  CHECKBOX
*/

/* <div class="checkbox-wrapper-24">
  <input type="checkbox" id="check-24" name="check" value="" />
  <label for="check-24">
    <span></span>Checkbox
  </label>
</div> */

.checkbox-wrapper-24 {
    margin: 10px 0;
  }
  
  .checkbox-wrapper-24 .checkbox {
      display: table-cell;
      width: 100%;
      height: 100%;
      vertical-align: middle;
      text-align: center;
  }
  
  .checkbox-wrapper-24 label {
    display: inline-block;
    color: #333;
    cursor: pointer;
    position: relative;
  }
  .checkbox-wrapper-24 label span {
      display: inline-block;
      position: relative;
      background-color: transparent;
      width: 25px;
      height: 25px;
      transform-origin: center;
      border: 2px solid #333;
      border-radius: 50%;
      vertical-align: middle;
      margin-right: 10px;
      transition: background-color 150ms 200ms, transform 350ms cubic-bezier(0.78, -1.22, 0.17, 1.89);
  }
  .checkbox-wrapper-24 label span:before {
      content: "";
      width: 0px;
      height: 2px;
      border-radius: 2px;
      background: #333;
      position: absolute;
      transform: rotate(50deg);
      top: 13px;
      left: 9px;
      transition: width 50ms ease 50ms;
      transform-origin: 20% -5%;
  }
  .checkbox-wrapper-24 label span:after {
      content: "";
      width: 0;
      height: 2px;
      border-radius: 2px;
      background: #333;
      position: absolute;
      transform: rotate(305deg);
      top: 16px;
      left: 10px;
      transition: width 50ms ease;
      transform-origin: 0% 0%;
  }
  .checkbox-wrapper-24 label:hover span:before {
      width: 5px;
      transition: width 100ms ease;
  }
  .checkbox-wrapper-24 label:hover span:after {
      width: 10px;
      transition: width 150ms ease 100ms;
  }
  
  .checkbox-wrapper-24 input[type=checkbox] {
      display: none;
  }
  .checkbox-wrapper-24 input[type=checkbox]:checked + label span {
      background-color: #333;
      transform: scale(1.25);
  }
  .checkbox-wrapper-24 input[type=checkbox]:checked + label span:after {
      width: 10px;
      background: #fff;
      transition: width 150ms ease 100ms;
  }
  .checkbox-wrapper-24 input[type=checkbox]:checked + label span:before {
      width: 5px;
      background: #fff;
      transition: width 150ms ease 100ms;
  }
  .checkbox-wrapper-24 input[type=checkbox]:checked + label:hover span {
      background-color: #333;
      transform: scale(1.25);
  }
  .checkbox-wrapper-24 input[type=checkbox]:checked + label:hover span:after {
      width: 10px;
      background: #fff;
      transition: width 150ms ease 100ms;
  }
  .checkbox-wrapper-24 input[type=checkbox]:checked + label:hover span:before {
      width: 5px;
      background: #fff;
      transition: width 150ms ease 100ms;
  }